{
  "name": "Git-lfs",
  "tagline": "Git extension for versioning large files",
  "body": "# Git Large File Storage\r\n\r\n[![Build Status](https://travis-ci.org/git-lfs/git-lfs.svg?branch=master)](https://travis-ci.org/git-lfs/git-lfs)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/46a5yoqc3hk59bl5/branch/master?svg=true)](https://ci.appveyor.com/project/git-lfs/git-lfs/branch/master)\r\n\r\nGit LFS is a command line extension and [specification](docs/spec.md) for\r\nmanaging large files with Git. The client is written in Go, with pre-compiled\r\nbinaries available for Mac, Windows, Linux, and FreeBSD. Check out the\r\n[Git LFS website][page] for an overview of features.\r\n\r\n[page]: https://git-lfs.github.com/\r\n\r\n## Getting Started\r\n\r\nYou can install Git LFS in several different ways, depending on your setup and\r\npreferences.\r\n\r\n* Linux users can install Debian or RPM packages from [PackageCloud](https://packagecloud.io/github/git-lfs/install).  See the [Installation Guide](./INSTALLING.md) for details.\r\n* Mac users can install from [Homebrew](https://github.com/Homebrew/homebrew) with `brew install git-lfs`, or from [MacPorts](https://www.macports.org) with `port install git-lfs`.\r\n* Windows users can install from [Chocolatey](https://chocolatey.org/) with `choco install git-lfs`.\r\n* [Binary packages are available][rel] for Windows, Mac, Linux, and FreeBSD.\r\n* You can build it with Go 1.7.3+. See the [Contributing Guide](./CONTRIBUTING.md) for instructions.\r\n\r\n[rel]: https://github.com/git-lfs/git-lfs/releases\r\n\r\nNote: Git LFS requires Git v1.8.5 or higher.\r\n\r\nOnce installed, you need to setup the global Git hooks for Git LFS. This only\r\nneeds to be done once per machine.\r\n\r\n```bash\r\n$ git lfs install\r\n```\r\n\r\nNow, it's time to add some large files to a repository. The first step is to\r\nspecify file patterns to store with Git LFS. These file patterns are stored in\r\n`.gitattributes`.\r\n\r\n```bash\r\n$ mkdir large-repo\r\n$ cd large-repo\r\n$ git init\r\n\r\n# Add all zip files through Git LFS\r\n$ git lfs track \"*.zip\"\r\n```\r\n\r\nNow you're ready to push some commits:\r\n\r\n```bash\r\n$ git add .gitattributes\r\n$ git add my.zip\r\n$ git commit -m \"add zip\"\r\n```\r\n\r\nYou can confirm that Git LFS is managing your zip file:\r\n\r\n```bash\r\n$ git lfs ls-files\r\nmy.zip\r\n```\r\n\r\nOnce you've made your commits, push your files to the Git remote:\r\n\r\n```bash\r\n$ git push origin master\r\nSending my.zip\r\nLFS: 12.58 MB / 12.58 MB  100.00 %\r\nCounting objects: 2, done.\r\nDelta compression using up to 8 threads.\r\nCompressing objects: 100% (5/5), done.\r\nWriting objects: 100% (5/5), 548 bytes | 0 bytes/s, done.\r\nTotal 5 (delta 1), reused 0 (delta 0)\r\nTo https://github.com/git-lfs/git-lfs-test\r\n   67fcf6a..47b2002  master -> master\r\n```\r\n\r\n## Need Help?\r\n\r\nYou can get help on specific commands directly:\r\n\r\n```bash\r\n$ git lfs help <subcommand>\r\n```\r\n\r\nThe [official documentation](docs) has command references and specifications for\r\nthe tool. You can ask questions in the [Git LFS chat room][chat], or [file a new\r\nissue][ish]. Be sure to include details about the problem so we can\r\ntroubleshoot it.\r\n\r\n1. Include the output of `git lfs env`, which shows how your Git environment\r\nis setup.\r\n2. Include `GIT_TRACE=1` in any bad Git commands to enable debug messages.\r\n3. If the output includes a message like `Errors logged to /path/to/.git/lfs/objects/logs/*.log`,\r\nthrow the contents in the issue, or as a link to a Gist or paste site.\r\n\r\n[chat]: https://gitter.im/git-lfs/git-lfs\r\n[ish]: https://github.com/git-lfs/git-lfs/issues\r\n\r\n## Contributing\r\n\r\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for info on working on Git LFS and\r\nsending patches. Related projects are listed on the [Implementations wiki\r\npage][impl]. You can also join [the project's chat room][chat].\r\n\r\n[impl]: https://github.com/git-lfs/git-lfs/wiki/Implementations\r\n\r\n### Using LFS from other Go code\r\n\r\nAt the moment git-lfs is only focussed on the stability of its command line\r\ninterface, and the [server APIs](docs/api/README.md). The contents of the\r\nsource packages is subject to change. We therefore currently discourage other\r\nGo code from depending on the git-lfs packages directly; an API to be used by\r\nexternal Go code may be provided in future.\r\n\r\n## Core Team\r\n\r\nThese are the humans that form the Git LFS core team, which runs the project.\r\n\r\nIn alphabetical order:\r\n\r\n| [@andyneff](https://github.com/andyneff) | [@rubyist](https://github.com/rubyist) | [@sinbad](https://github.com/sinbad) | [@technoweenie](https://github.com/technoweenie) | [@ttaylorr](https://github.com/ttaylorr) |\r\n|---|---|---|---|---|---|\r\n| [![](https://avatars1.githubusercontent.com/u/7596961?v=3&s=100)](https://github.com/andyneff) | [![](https://avatars1.githubusercontent.com/u/143?v=3&s=100)](https://github.com/rubyist) | [![](https://avatars1.githubusercontent.com/u/142735?v=3&s=100)](https://github.com/sinbad) | [![](https://avatars3.githubusercontent.com/u/21?v=3&s=100)](https://github.com/technoweenie) | [![](https://avatars3.githubusercontent.com/u/443245?v=3&s=100)](https://github.com/ttaylorr) |\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}